name: "Stage flakes updates"

on:
  workflow_dispatch:
  schedule:
  - cron: '0 0 * * MON'

permissions:
  contents: write
  pull-requests: write

jobs:
  staging:
    name: Stage updates on staging branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/create-github-app-token@v2
      id: staging-bot-token
      with:
        app-id: ${{ secrets.STAGING_BOT_APP_ID }}
        private-key: ${{ secrets.STAGING_BOT_PRIVATE_KEY }}
    - uses: actions/checkout@main
      with:
        token: ${{ steps.staging-bot-token.outputs.token }}
    - name: Set up staging bot identity
      run: |
        BOT_LOGIN="${{ steps.staging-bot-token.outputs.app-slug }}[bot]"
        git config user.name "$BOT_LOGIN"
        git config user.email "$(gh api "/users/$BOT_LOGIN" --jq '.id')+$BOT_LOGIN@users.noreply.github.com"
      env:
        GH_TOKEN: ${{ steps.staging-bot-token.outputs.token }}
    - uses: DeterminateSystems/nix-installer-action@main
    - name: Update flake lock file
      run: |
        git switch -c staging
        nix flake update --commit-lock-file
        if ! git diff origin/master staging --exit-code; then
          echo "FLAKE_UPDATE=true" >> $GITHUB_ENV
        fi
    - name: Create pull request
      if: env.FLAKE_UPDATE == 'true'
      run: |
        git push -f origin staging:staging
        if [ -z $(gh pr list --head staging) ]; then
          gh pr create --base master --head staging \
            --title 'Bump flakes inputs' \
            --body 'Automatic bump by running `nix flake update --commit-lock-file`.'
        fi
      env:
        GH_TOKEN: ${{ steps.staging-bot-token.outputs.token }}
